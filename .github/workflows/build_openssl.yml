name: build openssl Task

on:
  workflow_dispatch:
    inputs:
      openssl-version:
        description: 'Openssl Build Version'
        required: true
        type: string
      mingw:
        description: 'mingw Version'
        required: true
        type: string     
      install-prefix:
        description: 'binaries install prefix'
        required: true        
        type: string            
      build-date:     
        description: 'build date'
        required: true
        type: string       
      qt-version:
        description: 'qt Version'
        required: false
        default: '6.8.0'
        type: string             
      upload:
        description: 'Upload binaries to the release page'
        required: true
        default: false
        type: boolean
      runs-on:
        description: "Runner to use for the build"
        required: true
        type: choice
        options:
          - ubuntu-22.04
          - windows-2022
  

  workflow_call:
    inputs:
      openssl-version:
        description: 'Openssl Build Version'
        required: true
        type: string
      mingw:
        description: 'mingw Version'
        required: true
        type: string        
      install-prefix:
        description: 'binaries install prefix'
        required: true        
        type: string              
      build-date:     
        description: 'build date'
        required: true
        type: string       
      qt-version:
        description: 'qt Version'
        required: false
        default: '6.8.0'
        type: string                      
      upload:
        description: 'Upload binaries to the release page'
        required: true
        default: false
        type: boolean
      runs-on:
        description: "Runner to use for the build"
        required: true
        type: string
    # secrets:
    #   RELEASE_TASKS_USER_TOKEN:
    #     description: "Secret used to check user permissions."
    #     required: false
jobs:
  build:
    name: buil openssl
    runs-on: ${{ inputs.runs-on }}
    # i f: github.repository == 'llvm/llvm-project'
    # outputs:
      # release-version: ${{ steps.vars.outputs.release-version }}
      # ref: ${{ steps.vars.outputs.ref }}
      # upload: ${{ steps.vars.outputs.upload }}
      # target-cmake-flags: ${{ steps.vars.outputs.target-cmake-flags }}
      # build-flang: ${{ steps.vars.outputs.build-flang }}
      # enable-pgo: ${{ steps.vars.outputs.enable-pgo }}
      # release-binary-basename: ${{ steps.vars.outputs.release-binary-basename }}
      # release-binary-filename: ${{ steps.vars.outputs.release-binary-filename }}

    steps:
      - name: check out 
        uses: actions/checkout@v4.1.1

      - name: Checkout openssl
        uses: actions/checkout@v4.1.1
        with:
          repository: 'openssl/openssl'
          ref: 'openssl-${{ inputs.openssl-version }}'
          path: openssl

      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: false

      - name: Config MYSY2 Enviroment
        shell: cmd
        run: |
           set mingw=${{ inputs.mingw }}
           set QT_INSTALL_PREFIX=${{ inputs.install-prefix }}\Qt\${{ inputs.qt-version }}           
           @REM # echo %START%\MinGW\bin   
           @REM # echo %QT_INSTALL_PREFIX%          
           @REM # 第一个参数为Qt安装路径(带版本号: D:\Dev\Qt\6.8.0), 第二个参数开始为路径如MinGW\bin
           python ./utils/msys2_mod.py %QT_INSTALL_PREFIX% %CD%\MinGW\bin
           # curl -L -o  %mingw%.7z  https://github.com/niXman/mingw-builds-binaries/releases/download/14.2.0-rt_v12-rev0/%mingw%.7z
           curl -L -o  %mingw%.7z  https://github.com/njuFerret/actions/releases/download/deps/%mingw%.7z
           
           7z x %mingw%.7z
           if exist mingw64 (
              move mingw64 MinGW
           )
          #  mkdir D:\Dev\Qt\%QT_Ver%\3rdParty\openssl
          #  echo test > D:\Dev\Qt\%QT_Ver%\3rdParty\openssl\build.txt

      - name: build
        shell: msys2 {0}
        run: |
          # g++ -v        
          echo QT_ROOT=$QT_ROOT  
          cd openssl 
          ls -l          
          ./config --prefix=$QT_ROOT/3rdParty/openssl          
          echo ---------------------patch Makefile------------------
          # 注意！注意！注意！
          # 此处修改 Makefile 文件中 00-base-templates.conf 的绝对路径为相对路径，
          # /d/path1/path2/Configurations/00-base-templates.conf => Configurations/00-base-templates.conf
          sed -i "s|$(pwd)/||g" Makefile
          echo ------------------------ compile openssl -------------------
          mingw32-make -j
          echo ------------------- install openssl without docs-------------------
          # 尼玛, 安装文档会出错！！！！
          mingw32-make install_sw install_ssldirs -j
          export doc=$QT_ROOT/3rdParty/openssl/openssl-${{ inputs.openssl-version }}_${{ inputs.mingw }}.txt
          echo "" >> $doc
          echo openssl v${{ inputs.openssl-version }} build info: > $doc
          echo "" >> $doc
          echo "    build date: ${{ inputs.build-date }}" >> $doc
          echo "    openssl version: ${{ inputs.openssl-version }}" >> $doc
          echo "    mingw version: ${{ inputs.mingw }}" >> $doc        
          echo "" >> $doc
          echo "build env:   MinGW64 + MSYS2 + Windows " >> $doc
          echo "" >> $doc
          echo "build cmd:" >> $doc
          echo "    ./config --prefix=$QT_ROOT/3rdParty/openssl" >> $doc
          echo "    sed -i \"s|$(pwd)/||g\" Makefile ">> $doc
          echo "    mingw32-make -j " >> $doc
          echo "    # do NOT install doc" >> $doc
          echo "    mingw32-make install_sw install_ssldirs -j" >> $doc
          echo "" >> $doc
          

          
      - name: 7ziped openssl folder
        shell: cmd
        run: |
          7z a openssl-${{ inputs.openssl-version }}_${{ inputs.mingw }}.7z D:\Dev\Qt\${{ inputs.qt-version }}\3rdParty\openssl
          dir

      - name: upload openssl-${{ inputs.openssl-version }} binaries
        uses:  actions/upload-artifact@v4.4.3
        with:
          name: 'openssl'
          path: ./openssl-${{ inputs.openssl-version }}_${{ inputs.mingw }}.7z


  release:
    permissions:
      contents: write
  
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Download openssl
      uses: actions/download-artifact@v4
      with:          
        name: 'openssl'          
        # merge-multiple: true
        path: ./

    - name: Unzip openssl
      shell: bash
      run: |
        ls -l   
        7z x openssl-${{ inputs.openssl-version }}_${{ inputs.mingw }}.7z
        ls -l
        ls -l openssl 


    - name: Upload to Release
      id: upload_to_release
      uses: softprops/action-gh-release@v2
      with:
        files: "*.7z"
        tag_name: openssl-${{ inputs.openssl-version }}
        



